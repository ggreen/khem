<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<job id="GCIM" xmlns="http://www.springframework.org/schema/batch">
		<step id="GCIM_IMPORT">
			<tasklet>
				<chunk reader="GCIM_READER" writer="GCIM_WRITER"
					commit-interval="1000" />
				<listeners>
		            <listener ref="GCIM_PREPROCESSOR"/>
					 <listener ref="BATCH_ERROR_LISTENER"/>
		        </listeners>
			</tasklet>
		</step>
	</job>
	<bean id="GCIM_READER" class="org.springframework.batch.item.database.JdbcCursorItemReader">
		<property name="sql">
				<value>SELECT ROWNUM INVENTORY_ID,
							   'GCIM' INV_SOURCE_CD,
							   M.COMPOUND_ID STRUCTUREKEY,
							   CD.CONTAINER_DISTRIBUTION_ID CONTAINERLABEL,
							   CD.VIAL_BARCODE_ID BARCODE,
							   DECODE(CD.RECIPIENT_SITE,'RY', 'RYN','WP', 'WPP', 'BM', 'BMB', 'KEN', 'KENILWORTH', CD.RECIPIENT_SITE) SITE,
							   CD.RECIPIENT_MAIL BUILDING,
							   M.BATCH BATCHNUMBER,
							   NULL FLOOR,
							   NULL ROOM,
							   NULL SUBLOCATION,
							   'MERCK' VENDORNAME,
							   CD.AMOUNT ORIGINALAMOUNT,
							  CD.AMOUNT_UNIT ORIGINALAMOUNTUNITS,
							  NULL CASNUMBER,
							  'LAB' LOC_TYPE_CD,
							   CD.DATESTAMP LAST_MOD_DT,
							   molnemakey(MOL.CTAB) MOLKEY,
							   'IN USE' STATUS_CD,
							  'MCIDB' STRUCT_SOURCE_CD
							FROM ECDSDAT.CONTAINER_DISTRIBUTION_TABLE CD,
							  ECDSDAT.MRL_LABEL_TABLE M,
							  ECDSDAT.CONTAINERS_TABLE C,
                ECDSPIC60.RCG_STUFF_MOLTABLE MOL
							WHERE 
							CD.VIAL_BARCODE_ID IS NOT NULL
							AND CD.RECIPIENT_SITE in ('KEN','WP', 'WPP', 'BM', 'BMB', 'RY', 'RYN')
							AND C.STUFF_ID   = M.STUFF_ID
							AND CD.CONTAINER_ID=C.CONTAINER_ID
              AND M.COMPOUND_ID = MOL.COMPOUND_ID
				</value>
		</property>
		<property name="dataSource">
			<ref bean="gcimDataSource"/>
		</property>
		<property name="rowMapper">
			<ref bean="rowMapper"/>
		</property>
	</bean>
	
	
   <bean id="GCIM_WRITER" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="sql">
			<value>
				insert into INVENTORY (INVENTORY_ID,
						INV_SOURCE_CD,
						STRUCTUREKEY,
						CONTAINERLABEL,
						BARCODE,
						SITE,
						BUILDING,
						BATCHNUMBER,
						FLOOR,
						ROOM, --10
						SUBLOCATION,
						VENDORNAME,
						ORIGINALAMOUNT,
						ORIGINALAMOUNTUNITS,
						CASNUMBER,
						LOC_TYPE_CD,
						LAST_MOD_DT,
						MOLKEY,
						STATUS_CD,
						STRUCT_SOURCE_CD) --10
						values (?,?,?,?,?,
						        ?,?,?,?,?,
						        ?,?,?,?,?,
						        ?,?,?,?,?
						        )
			</value>
		</property>
				<property name="dataSource">
			<ref bean="dataSource"/>
		</property>
		<property name="itemPreparedStatementSetter">
			<ref bean="itemPreparedStatementSetter"/>
		</property>
	</bean>

	<bean id="GCIM_PREPROCESSOR" class="solutions.dao.spring.batch.CommandStepExecutionListener">
		<property name="beforeCommand" ref="GCIM_DELETE_PREVIOUS_COMMAND"/>
	</bean>
	<bean id="GCIM_DELETE_PREVIOUS_COMMAND" class="solutions.dao.executable.SqlExecutable">
		<property name="sql">
			<value>
				delete from INVENTORY where INV_SOURCE_CD = 'GCIM'
			</value>
		</property>
		<property name="dataSource" ref="dataSource"/>
	</bean>

</beans>